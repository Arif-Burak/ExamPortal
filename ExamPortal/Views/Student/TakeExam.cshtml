@model ExamPortal.ViewModels.TakeExamViewModel

@{
    ViewData["Title"] = "Sınav Al";
}

<h1>@Model.ExamTitle Sınavı</h1>

<form asp-action="SubmitExam" method="post">
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="ParticipationId" />

    @for (int i = 0; i < Model.Questions.Count; i++)
    {
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title">Soru @(i + 1): @Model.Questions[i].Text</h5>
                @foreach (var answer in Model.Questions[i].Answers)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Questions[@i].SelectedAnswerId" value="@answer.AnswerId" required>
                        <label class="form-check-label">
                            @answer.Text
                        </label>
                    </div>
                }
                <span asp-validation-for="Questions[@i].SelectedAnswerId" class="text-danger"></span>
            </div>
        </div>
    }

    <button type="submit" class="btn btn-success">Gönder</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
